@model WebMvc.Models.ViewModels.VM_WatchVideoWithWaiting
@{
}
<head>

</head>

<h1></h1>
<!-
<div id="answerModel" class="modal">
    <h1 class="answer-content"></h1>
</div>

<div class="videoPlayer">
    <video class="video" preload="metadata" data-second=15>
        <source src="./static/ExampleVideo.mp4#t=@Model.startTime" type="video/mp4" />
        <source src="./static/ExampleVideo.webm" type="video/webm" />
        <track default srclang="tr" kind="subtitles" label="english" src="../static/ExampleSubtitle.vtt" />
    </video>
</div>

<script>
    const stopTimeArray = [5,10,15];
    var questionsArray = [];
    @foreach (var question in Model.Question)
    {
        @:questionsArray.push("@question.quest")
    }

    const videoPlayer = document.querySelector(".videoPlayer");
    const video = videoPlayer.querySelector(".video");

    var modal = document.getElementById("answerModel");
    var span = document.getElementsByClassName("answer-content")[0];

    var answersArr =[]

    stopTimeArray.push(0);

    var start = 1;
    var time = 0.0;
    var stopperCount = 0;
    var isStoptime = 1;
    var waitTime = @Model.waitToStart;
    var startTime = false;

    var arr=[];
        
    waitRealTimer = setInterval(waitTimer, 1000);
    function waitTimer(){

        console.log(waitTime);
        if(waitTime === 0){
            while(true){
                if (@Model.startTime >= stopTimeArray[stopperCount]) {
                    stopperCount++;
                }
                else{
                    break;
                }
            }
            clearInterval(waitRealTimer)
            realTimer = setInterval(Timer, 1000);
        }
        waitTime = waitTime - 1;
    }



    function Timer() {
        console.log("stopperCount:" + stopperCount)
        if (time === 0) {
            video.play();
        }
        if (time === stopTimeArray[stopperCount]) {
            video.pause();
            modal.style.display = "block";
            span.innerHTML = "<p>" + questionsArray[stopperCount] + "<label>Answer</label><input type='text' placeholder='Answer' id='answerField' name='array[]' value='' class='cnt'>";
            console.log("Stop");

        }
        if (time === stopTimeArray[stopperCount] + 5) {
            answersArr.push(document.getElementById("answerField").value);
            $.ajax({
                data:
                {
                    studentAnswer: document.getElementById("answerField").value,
                    studentQuestionCount: stopperCount,
                    studentNumber: @Model.studentNo
                    },
                type: 'POST',
                url: '@Url.Action("TakeAnswer")'
            })
            modal.style.display = "none";
            video.play();
            time = stopTimeArray[stopperCount] + 1;
            if (stopperCount !== stopTimeArray.length - 1) {
                stopperCount++;
            }

        }
        if (time === 20) {
            video.pause();
            modal.style.display = "block";
            let size = 0;
            span.innerHTML = "";
            while (size < stopperCount) {
                span.innerHTML = span.innerHTML + "<p type='text' >Answer " + size + " is " + answersArr[size] + " </p>";
                size++;
            }
            span.innerHTML = span.innerHTML + "<form method='post' action='Crud/Finish'><button type='submit' class='btn btn-primary'>Submit</button></form>";
            clearInterval(realTimer);
        }
        console.log(time);
        time++;
    }

</script>

<style>
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }


    /* Modal Content/Box */
    .answer-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    .result-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }
    .video-player{
    max-width: 750px;
    position: relative;
    overflow: hidden;
    }

    .video {
        width: 100%;
    }
</style>->